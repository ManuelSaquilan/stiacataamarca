# Generated by Django 4.2.3 on 2025-03-21 03:03

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comercio',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comercio', models.CharField(max_length=30, verbose_name='Comercio')),
                ('titular', models.CharField(max_length=30, verbose_name='Titular de Comercio')),
                ('activo', models.BooleanField(default=True, null=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Comercio',
                'verbose_name_plural': 'Comercios',
                'db_table': 'comercio',
                'ordering': ['comercio'],
            },
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=30, verbose_name='Nombre y Apellido')),
                ('legajo', models.IntegerField(unique=True, verbose_name='Legajo N째')),
                ('correoEmpleado', models.EmailField(max_length=50, verbose_name='Correo Electr처nico')),
                ('dni', models.IntegerField(unique=True, verbose_name='DNI')),
                ('activo', models.BooleanField(default=True, null=True, verbose_name='Activo')),
                ('autorizado', models.CharField(blank=True, max_length=30, verbose_name='Nombre y Apellido Autorizado')),
                ('dniautorizado', models.IntegerField(blank=True, null=True, verbose_name='DNI Autorizado')),
                ('correoAutorizado', models.EmailField(blank=True, max_length=50, null=True, verbose_name='Correo Electr처nico Autorizado')),
                ('autorizado2', models.CharField(blank=True, max_length=30, verbose_name='Nombre y Apellido Autorizado')),
                ('dniautorizado2', models.IntegerField(blank=True, null=True, verbose_name='DNI Autorizado')),
                ('correoAutorizado2', models.EmailField(blank=True, max_length=50, null=True, verbose_name='Correo Electr처nico Autorizado')),
            ],
            options={
                'verbose_name': 'empleado',
                'verbose_name_plural': 'empleados',
                'db_table': 'empleado',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Margen',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('margen', models.IntegerField(verbose_name='Margen')),
            ],
            options={
                'verbose_name': 'margen',
                'verbose_name_plural': 'margenes',
                'db_table': 'margen',
            },
        ),
        migrations.CreateModel(
            name='Orden',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('importe', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total Compra')),
                ('cuotas', models.IntegerField(verbose_name='Cuotas')),
                ('valorcuota', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor de Cuota')),
                ('fecha', models.DateField(auto_now=True, verbose_name='Fecha de Compra')),
                ('activo', models.BooleanField(default=True, null=True, verbose_name='Activo')),
                ('usuario', models.CharField(max_length=25, null=True, verbose_name='Usuario de carga')),
                ('comercio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordenes.comercio')),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ordenes.empleado')),
            ],
            options={
                'verbose_name': 'orden',
                'verbose_name_plural': 'ordenes',
                'db_table': 'ordenes_orden',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('comercio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ordenes.comercio', verbose_name='Comercio')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
